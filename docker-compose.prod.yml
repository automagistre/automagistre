version: '3.7'

services:
    nginx:
        image: automagistre/app-nginx:${VERSION}
        networks:
            - automagistre
            - ingress
        deploy:
            mode: replicated
            replicas: 1
            endpoint_mode: dnsrr
            restart_policy:
                condition: on-failure
            update_config:
                parallelism: 1
                delay: 10s
                order: start-first
            labels:
                - "traefik.docker.network=proxy"
                - "traefik.enable=true"
                - "traefik.frontend.rule=Host:api.automagistre.ru,sto.automagistre.ru"
                - "traefik.port=80"
                - "traefik.protocol=http"
                - "traefik.backend.loadbalancer.method=drr"

    app: &app
        image: automagistre/app:${VERSION}
        networks:
            mercure: {}
            automagistre:
                aliases:
                    - php-fpm
        volumes:
          - /etc/automagistre/env:/usr/local/app/.env:ro
        secrets:
            - database_password
        stop_grace_period: 120s
        deploy:
            mode: replicated
            replicas: 1
            endpoint_mode: dnsrr
            restart_policy:
                condition: on-failure
            update_config:
                parallelism: 1
                delay: 10s
                order: start-first

    migration_landlord:
        <<: *app
        command: wait-for-it.sh landlord:5432 -- console doctrine:migrations:migrate --no-interaction --allow-no-migration --em=landlord
        deploy:
            mode: replicated
            replicas: 1
            restart_policy:
                condition: none
            labels:
                - "traefik.enable=false"

    migration_tenant_sandbox:
        <<: *app
        command: wait-for-it.sh tenant_sandbox:5432 -- console doctrine:migrations:migrate --no-interaction --allow-no-migration --em=tenant --tenant=sandbox
        deploy:
            mode: replicated
            replicas: 1
            restart_policy:
                condition: none
            labels:
                - "traefik.enable=false"

    migration_tenant_msk:
        <<: *app
        command: wait-for-it.sh tenant_msk:5432 -- console doctrine:migrations:migrate --no-interaction --allow-no-migration --em=tenant --tenant=msk
        deploy:
            mode: replicated
            replicas: 1
            restart_policy:
                condition: none
            labels:
                - "traefik.enable=false"

    migration_tenant_kazan:
        <<: *app
        command: wait-for-it.sh tenant_kazan:5432 -- console doctrine:migrations:migrate --no-interaction --allow-no-migration --em=tenant --tenant=kazan
        deploy:
            mode: replicated
            replicas: 1
            restart_policy:
                condition: none
            labels:
                - "traefik.enable=false"

    migration_tenant_shavlev:
        <<: *app
        command: wait-for-it.sh tenant_kazan:5432 -- console doctrine:migrations:migrate --no-interaction --allow-no-migration --em=tenant --tenant=shavlev
        deploy:
            mode: replicated
            replicas: 1
            restart_policy:
                condition: none
            labels:
                - "traefik.enable=false"

    landlord: &postgres
        image: postgres:12.2
        volumes:
            -   type: bind
                source: /opt/am/db/landlord
                target: /var/lib/postgresql/data
            -   type: bind
                source: /opt/am/db/backups
                target: /backups
        environment:
            POSTGRES_DB: landlord
            POSTGRES_USER: db
            POSTGRES_PASSWORD_FILE: /run/secrets/database_password
        networks:
            - automagistre
        secrets:
            - database_password
        deploy:
            mode: global
            update_config:
                failure_action: rollback
                parallelism: 1
                delay: 5s
        healthcheck:
            test: pg_isready
            interval: 5s
            timeout: 5s
            retries: 3
            start_period: 10s

    tenant_sandbox:
        <<: *postgres
        environment:
            POSTGRES_DB: tenant
            POSTGRES_USER: db
            POSTGRES_PASSWORD_FILE: /run/secrets/database_password
        volumes:
            -   type: bind
                source: /opt/am/db/tenant/sandbox
                target: /var/lib/postgresql/data
            -   type: bind
                source: /opt/am/db/backups
                target: /backups

    tenant_msk:
        <<: *postgres
        environment:
            POSTGRES_DB: tenant
            POSTGRES_USER: db
            POSTGRES_PASSWORD_FILE: /run/secrets/database_password
        volumes:
            -   type: bind
                source: /opt/am/db/tenant/msk
                target: /var/lib/postgresql/data
            -   type: bind
                source: /opt/am/db/backups
                target: /backups

    tenant_kazan:
        <<: *postgres
        environment:
            POSTGRES_DB: tenant
            POSTGRES_USER: db
            POSTGRES_PASSWORD_FILE: /run/secrets/database_password
        volumes:
            -   type: bind
                source: /opt/am/db/tenant/kazan
                target: /var/lib/postgresql/data
            -   type: bind
                source: /opt/am/db/backups
                target: /backups

    tenant_shavlev:
        <<: *postgres
        environment:
            POSTGRES_DB: tenant
            POSTGRES_USER: db
            POSTGRES_PASSWORD_FILE: /run/secrets/database_password
        volumes:
            -   type: bind
                source: /opt/am/db/tenant/shavlev
                target: /var/lib/postgresql/data
            -   type: bind
                source: /opt/am/db/backups
                target: /backups

    memcached:
        image: memcached:1.5.22-alpine
        networks:
            - automagistre
        healthcheck:
            test: nc -z 127.0.0.1 11211
            interval: 5s
            timeout: 5s
            retries: 3
            start_period: 5s

networks:
    ingress:
        external: true
        name: proxy
    mercure:
        external: true
        name: mercure
    automagistre:
        driver: overlay
        name: automagistre

secrets:
    database_password:
        external: true
        name: automagistre_database_password
