framework:
    #esi:             ~
    secret:          "%env(APP_SECRET)%"
    form:            ~
    csrf_protection: ~
    serializer:
        enable_annotations: true
    trusted_hosts:   ~
    session:
        enabled: true
        handler_id: Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler
        cookie_httponly: true
        cookie_secure: 'auto'
        cookie_samesite: 'lax'
    fragments:       ~
    http_method_override: true
    assets: ~
    php_errors:
        log: '%kernel.debug%'
    router:
        strict_requirements: false
    cache:
        default_redis_provider: 'redis://%env(CACHE_REDIS_HOST)%:%env(CACHE_REDIS_PORT)%'

services:
    Symfony\Component\PropertyAccess\PropertyAccessorInterface:
        alias: property_accessor

    Symfony\Component\HttpKernel\Controller\ArgumentResolverInterface:
        alias: argument_resolver

    Redis:
        class: Redis
        lazy: true
        calls:
            - [ connect, [ '%env(SESSION_REDIS_HOST)%', '%env(int:SESSION_REDIS_PORT)%' ]]
    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        class:
        arguments: [ '@Redis' ]

parameters:
    locale: ru
    env(SESSION_REDIS_HOST): 'redis'
    env(SESSION_REDIS_PORT): '6379'
    env(CACHE_REDIS_HOST): 'redis'
    env(CACHE_REDIS_PORT): '6379'
