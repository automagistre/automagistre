version: '3.7'

services:
    nginx:
        image: automagistre/tenant-nginx:${VERSION}
        networks:
            - default
            - traefik
        deploy:
            mode: replicated
            replicas: 1
            endpoint_mode: dnsrr
            restart_policy:
                condition: on-failure
            update_config:
                parallelism: 1
                delay: 10s
                order: start-first
            labels:
                - "traefik.enable=true"
                - "traefik.http.routers.automagistre-tenant.rule=Host(`msk.automagistre.ru`, `kazan.automagistre.ru`, `shavlev.automagistre.ru`, `demo.automagistre.ru`)"
                - "traefik.http.routers.automagistre-tenant.entrypoints=websecure"
                - "traefik.http.routers.automagistre-tenant.tls=true"
                - "traefik.http.routers.automagistre-tenant.tls.certresolver=leresolver"
                - "traefik.http.services.automagistre-tenant-service.loadbalancer.server.port=80"

    php-fpm: &php-fpm
        image: automagistre/tenant-php:${VERSION}
        networks:
            - default
            - nsq
        environment:
            APP_SECRET: ${APP_SECRET}
            DATABASE_PASSWORD: ${DB_PASSWORD}
            SENTRY_DSN: ${SENTRY_DSN}
            SMSAERO_AUTH: ${SMSAERO_AUTH}
            TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
            GOOGLE_CREDENTIALS_FILE: ${GOOGLE_CREDENTIALS_FILE}
            KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
        stop_grace_period: 120s
        deploy:
            mode: replicated
            replicas: 1
            endpoint_mode: dnsrr
            restart_policy:
                condition: any
            update_config:
                parallelism: 1
                delay: 10s
                order: start-first

    cron_msk: &cron
        <<: *php-fpm
        command: console cron:start --blocking
        environment:
            TENANT: msk
        healthcheck:
            disable: true
        deploy:
            mode: replicated
            replicas: 1

    cron_kazan:
        <<: *cron
        environment:
            TENANT: kazan

    cron_shavlev:
        <<: *cron
        environment:
            TENANT: shavlev

    cron_demo:
        <<: *cron
        environment:
            TENANT: demo

    messenger:
        <<: *php-fpm
        command: console messenger:consume async -vv
        healthcheck:
            disable: true
        deploy:
            mode: replicated
            replicas: 1

    migration:
        <<: *php-fpm
        command: console tenant:doctrine:migrate
        healthcheck:
            disable: true
        deploy:
            mode: replicated
            replicas: 1
            restart_policy:
                condition: on-failure

    memcached:
        image: memcached:1.6.9-alpine
        healthcheck:
            test: nc -z 127.0.0.1 11211
            interval: 5s
            timeout: 5s
            retries: 3
            start_period: 5s

    postgres_msk: &postgres
        image: postgres:12.2
        volumes:
            -   type: bind
                source: /opt/am/db/tenant/msk
                target: /var/lib/postgresql/data
            -   type: bind
                source: /opt/am/db/backups
                target: /backups
        environment:
            POSTGRES_DB: db
            POSTGRES_USER: db
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        deploy:
            mode: global
            update_config:
                failure_action: rollback
                parallelism: 1
                delay: 5s
        healthcheck:
            test: pg_isready
            interval: 5s
            timeout: 5s
            retries: 3
            start_period: 10s

    postgres_kazan:
        <<: *postgres
        volumes:
            -   type: bind
                source: /opt/am/db/tenant/kazan
                target: /var/lib/postgresql/data
            -   type: bind
                source: /opt/am/db/backups
                target: /backups

    postgres_shavlev:
        <<: *postgres
        volumes:
            -   type: bind
                source: /opt/am/db/tenant/shavlev
                target: /var/lib/postgresql/data
            -   type: bind
                source: /opt/am/db/backups
                target: /backups

    postgres_demo:
        <<: *postgres
        volumes:
            -   type: bind
                source: /opt/am/db/tenant/demo
                target: /var/lib/postgresql/data
            -   type: bind
                source: /opt/am/db/backups
                target: /backups

networks:
    traefik:
        external: true
        name: traefik
    default:
        driver: overlay
        name: automagistre
        attachable: true
    nsq:
        external: true
        name: nsq
