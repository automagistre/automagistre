version: '3.7'

services:
    containous:
        image: containous/whoami
        networks:
            - traefik
        deploy:
            labels:
                - "traefik.enable=true"
                - "traefik.http.routers.automagistre-crm-redirect-old.rule=Host(`msk.automagistre.ru`, `kazan.automagistre.ru`, `shavlev.automagistre.ru`, `whoami.automagistre.ru`)"
                - "traefik.http.routers.automagistre-crm-redirect-old.entrypoints=websecure"
                - "traefik.http.routers.automagistre-crm-redirect-old.tls=true"
                - "traefik.http.routers.automagistre-crm-redirect-old.tls.certresolver=leresolver"
                - "traefik.http.routers.automagistre-crm-redirect-old.middlewares=automagistre-crm-redirect-old-ymap,automagistre-crm-redirect-old"
                - "traefik.http.middlewares.automagistre-crm-redirect-old-ymap.redirectregex.regex=^https://(msk|kazan|shavlev).automagistre.ru/r/ymap"
                - "traefik.http.middlewares.automagistre-crm-redirect-old-ymap.redirectregex.replacement=https://r.automagistre.ru/$$1/ymap"
                - "traefik.http.middlewares.automagistre-crm-redirect-old-ymap.redirectregex.permanent=true"
                - "traefik.http.middlewares.automagistre-crm-redirect-old.redirectregex.regex=^https://(msk|kazan|shavlev).automagistre.ru/(.*)"
                - "traefik.http.middlewares.automagistre-crm-redirect-old.redirectregex.replacement=https://crm.automagistre.ru/$$1/$$2"
                - "traefik.http.middlewares.automagistre-crm-redirect-old.redirectregex.permanent=true"
                - "traefik.http.services.automagistre-crm-redirect-old-service.loadbalancer.server.port=80"

    nginx:
        image: automagistre/tenant-nginx:${VERSION}
        networks:
            default:
            traefik:
            prometheus:
                aliases:
                    - automagistre
        deploy:
            mode: replicated
            replicas: 1
            endpoint_mode: dnsrr
            update_config:
                parallelism: 1
                delay: 10s
                order: start-first
            labels:
                - "traefik.enable=true"
                - "traefik.http.routers.automagistre-crm.rule=Host(`crm.automagistre.ru`)"
                - "traefik.http.routers.automagistre-crm.entrypoints=websecure"
                - "traefik.http.routers.automagistre-crm.tls=true"
                - "traefik.http.routers.automagistre-crm.tls.certresolver=leresolver"
                - "traefik.http.routers.automagistre-crm-redirect.rule=Host(`r.automagistre.ru`)"
                - "traefik.http.routers.automagistre-crm-redirect.entrypoints=websecure"
                - "traefik.http.routers.automagistre-crm-redirect.tls=true"
                - "traefik.http.routers.automagistre-crm-redirect.tls.certresolver=leresolver"
                - "traefik.http.routers.automagistre-crm-callback.rule=Host(`callback.automagistre.ru`)"
                - "traefik.http.routers.automagistre-crm-callback.entrypoints=websecure"
                - "traefik.http.routers.automagistre-crm-callback.tls=true"
                - "traefik.http.routers.automagistre-crm-callback.tls.certresolver=leresolver"
                - "traefik.http.services.automagistre-crm-callback-service.loadbalancer.server.port=80"

    php-fpm: &php-fpm
        image: automagistre/tenant-php:${VERSION}
        networks:
            - default
        environment:
            APP_SECRET: ${APP_SECRET}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            SENTRY_DSN: ${SENTRY_DSN}
            SMSAERO_AUTH: ${SMSAERO_AUTH}
            TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
            GOOGLE_CREDENTIALS_FILE: ${GOOGLE_CREDENTIALS_FILE}
            KEYCLOAK_CLI_CLIENT_SECRET: ${KEYCLOAK_CLI_CLIENT_SECRET}
            KEYCLOAK_CRM_OAUTH_CLIENT_SECRET: ${KEYCLOAK_CRM_OAUTH_CLIENT_SECRET}
        volumes:
            - /etc/hostname:/etc/hostname:ro
        stop_grace_period: 120s
        deploy:
            mode: replicated
            replicas: 1
            endpoint_mode: dnsrr
            update_config:
                parallelism: 1
                delay: 10s
                order: start-first

    cron:
        <<: *php-fpm
        command: console cron:start --blocking
        healthcheck:
            disable: true
        deploy:
            mode: replicated
            replicas: 1

    messenger:
        <<: *php-fpm
        command: console messenger:consume async -vv
        healthcheck:
            disable: true
        deploy:
            mode: replicated
            replicas: 1

    redis:
        image: redis:6.2.5-alpine
        volumes:
            -   type: bind
                source: /opt/am/redis/data
                target: /data
        deploy:
            mode: replicated
            replicas: 1
            endpoint_mode: dnsrr
            update_config:
                order: stop-first

    hasura:
        image: hasura/graphql-engine:v2.2.0
        command:
            - graphql-engine
            - serve
            - --enable-console
            - --server-port=80
            - --unauthorized-role=anonymous
            - --cors-domain=*
            - --admin-internal-errors=true
            - --admin-secret=${HASURA_ADMIN_SECRET}
        environment:
            HASURA_GRAPHQL_DATABASE_URL: postgres://db:${DB_PASSWORD}@postgres:5432/db
            HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://db:${DB_PASSWORD}@postgres:5432/db
            HASURA_GRAPHQL_JWT_SECRET: '{"jwk_url": "https://sso.automagistre.ru/auth/realms/automagistre/protocol/openid-connect/certs"}'
        networks:
            - default
            - traefik
        deploy:
            mode: replicated
            replicas: 1
            update_config:
                parallelism: 1
                delay: 10s
                order: start-first
            labels:
                - "traefik.enable=true"
                - "traefik.http.routers.automagistre-hasura.rule=Host(`hasura.automagistre.ru`, `api.automagistre.ru`) || (Host(`crm-next.automagistre.ru`, `www.automagistre.ru`) && (Path(`/v1/graphql`) || PathPrefix(`/api`)))"
                - "traefik.http.routers.automagistre-hasura.entrypoints=websecure"
                - "traefik.http.routers.automagistre-hasura.tls=true"
                - "traefik.http.routers.automagistre-hasura.tls.certresolver=leresolver"
                - "traefik.http.services.automagistre-hasura-service.loadbalancer.server.port=80"

    postgres: &postgres
        image: postgres:13.4-alpine
        shm_size: 2gb
        volumes:
            -   type: bind
                source: /opt/am/postgres/data
                target: /var/lib/postgresql/data
        environment:
            POSTGRES_DB: db
            POSTGRES_USER: db
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        deploy:
            mode: global
            update_config:
                failure_action: rollback
                parallelism: 1
                delay: 5s
        healthcheck:
            test: pg_isready -U db
            interval: 5s
            timeout: 5s
            retries: 3
            start_period: 10s

    postgres_backup:
        <<: *postgres
        entrypoint: /bin/sh
        command:
            - -c
            - |
                apk add --no-cache tini gzip \
                && echo $$'
                postgres:5432:db:db:${DB_PASSWORD}
                ' > ~/.pgpass \
                && chmod 600 ~/.pgpass \
                && echo $$'#!/bin/bash
                pg_dump -h postgres -U db db | gzip > /backups/$$(date +"%Y%m%d_%H%M%S")_automagistre.sql.gz
                ' > /backup.sh \
                && chmod +x /backup.sh \
                && echo $$'
                10 3 * * * /backup.sh
                ' | crontab - \
                && exec tini -- crond -l 0 -f
        volumes:
            - /opt/am/backups/postgres:/backups
        deploy:
            mode: replicated
        healthcheck:
            disable: true

    nsqd:
        image: nsqio/nsq:v1.2.1
        command:
            - /nsqd
            - -data-path=/data
            - --lookupd-tcp-address=nsqlookupd:4160
        volumes:
            -   type: bind
                source: /opt/am/nsq/data
                target: /data
        deploy:
            update_config:
                order: stop-first

    nsqlookupd:
        image: nsqio/nsq:v1.2.1
        command:
            - /nsqlookupd

    nsqadmin:
        image: nsqio/nsq:v1.2.1
        command:
            - /nsqadmin
            - --http-address=0.0.0.0:80
            - --lookupd-http-address=nsqlookupd:4161

    nsqadmin-proxy:
        image: quay.io/oauth2-proxy/oauth2-proxy:v7.1.3
        command:
            - --http-address=:80
            - --upstream=http://nsqadmin:80
            - --reverse-proxy=true
            - --cookie-secret=${OAUTH2_PROXY_DEVOPS_COOKIE_SECRET}
            - --email-domain=*
            - --allowed-group=admin
            - --provider=keycloak
            - --skip-provider-button=true
            - --redirect-url=https://nsq.automagistre.ru/oauth2/callback
            - --scope=openid
            - --client-id=${OAUTH2_PROXY_DEVOPS_CLIENT_ID}
            - --client-secret=${OAUTH2_PROXY_DEVOPS_CLIENT_SECRET}
            - --login-url=https://sso.automagistre.ru/auth/realms/automagistre/protocol/openid-connect/auth
            - --redeem-url=https://sso.automagistre.ru/auth/realms/automagistre/protocol/openid-connect/token
            - --profile-url=https://sso.automagistre.ru/auth/realms/automagistre/protocol/openid-connect/userinfo
            - --validate-url=https://sso.automagistre.ru/auth/realms/automagistre/protocol/openid-connect/userinfo
        networks:
            - default
            - traefik
        deploy:
            labels:
                - "traefik.enable=true"
                - "traefik.http.routers.automagistre-nsq.rule=Host(`nsq.automagistre.ru`)"
                - "traefik.http.routers.automagistre-nsq.entrypoints=websecure"
                - "traefik.http.routers.automagistre-nsq.tls=true"
                - "traefik.http.routers.automagistre-nsq.tls.certresolver=leresolver"
                - "traefik.http.services.automagistre-nsq-service.loadbalancer.server.port=80"

    crm:
        image: automagistre/automagistre:crm-${VERSION}
        networks:
            - traefik
        deploy:
            update_config:
                order: start-first
                failure_action: rollback
                parallelism: 1
                delay: 5s
            labels:
                - "traefik.enable=true"
                - "traefik.http.routers.automagistre-crm-next.rule=Host(`crm-next.automagistre.ru`)"
                - "traefik.http.routers.automagistre-crm-next.entrypoints=websecure"
                - "traefik.http.routers.automagistre-crm-next.tls=true"
                - "traefik.http.routers.automagistre-crm-next.tls.certresolver=leresolver"
                - "traefik.http.services.automagistre-crm-next-service.loadbalancer.server.port=80"

networks:
    traefik:
        external: true
        name: traefik
    default:
        driver: overlay
        name: automagistre
        attachable: true
    prometheus:
        external: true
        name: prometheus
