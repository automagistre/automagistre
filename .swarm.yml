version: '3.7'

services:
    nginx:
        image: automagistre/tenant-nginx:${VERSION}
        networks:
            - default
            - ingress
        deploy:
            mode: replicated
            replicas: 1
            endpoint_mode: dnsrr
            restart_policy:
                condition: on-failure
            update_config:
                parallelism: 1
                delay: 10s
                order: start-first
            labels:
                - traefik.docker.network=proxy
                - traefik.enable=true
                - traefik.frontend.rule=Host:${TENANT}.automagistre.ru
                - traefik.port=80
                - traefik.protocol=http
                - traefik.backend.loadbalancer.method=drr

    php-fpm: &php-fpm
        image: automagistre/tenant-php:${VERSION}
        networks:
            - default
            - mercure
        environment:
            APP_SECRET: ${APP_SECRET}
            DATABASE_PASSWORD: ${DB_PASSWORD}
            SENTRY_DSN: ${SENTRY_DSN}
            MERCURE_JWT_KEY: ${MERCURE_JWT_KEY}
            SMSAERO_AUTH: ${SMSAERO_AUTH}
            TENANT: ${TENANT}
        stop_grace_period: 120s
        deploy:
            mode: replicated
            replicas: 1
            endpoint_mode: dnsrr
            restart_policy:
                condition: on-failure
            update_config:
                parallelism: 1
                delay: 10s
                order: start-first

    cron:
        <<: *php-fpm
        command: console cron:start --blocking
        healthcheck:
            disable: true
        deploy:
            mode: replicated
            replicas: 1

    migration:
        <<: *php-fpm
        command: wait-for-it.sh db:5432 -- console doctrine:migrations:migrate --no-interaction --allow-no-migration
        healthcheck:
            disable: true
        deploy:
            mode: replicated
            replicas: 1
            restart_policy:
                condition: none

    db:
        image: postgres:12.2
        volumes:
            -   type: bind
                source: /opt/am/db/tenant/${TENANT}
                target: /var/lib/postgresql/data
            -   type: bind
                source: /opt/am/db/backups
                target: /backups
        environment:
            POSTGRES_DB: db
            POSTGRES_USER: db
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        deploy:
            mode: global
            update_config:
                failure_action: rollback
                parallelism: 1
                delay: 5s
        healthcheck:
            test: pg_isready
            interval: 5s
            timeout: 5s
            retries: 3
            start_period: 10s

    memcached:
        image: memcached:1.5.22-alpine
        healthcheck:
            test: nc -z 127.0.0.1 11211
            interval: 5s
            timeout: 5s
            retries: 3
            start_period: 5s

networks:
    ingress:
        external: true
        name: proxy
    mercure:
        external: true
        name: mercure
    default:
        driver: overlay
        name: tenant_${TENANT}
