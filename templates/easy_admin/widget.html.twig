{% form_theme form with easyadmin_config('design.form_theme') %}

{% set widgetTarget = app.request.query.get('widgetTarget') %}
{% set widgetButton = app.request.query.get('widgetButton') %}

<div class="modal fade" id="{{ id }}-widget-modal" role="dialog" aria-labelledby="{{ id }}-modal-label" data-id="{{ id }}">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="{{ id }}-modal-label">{{ label }}</h4>
            </div>
            {{ form_start(form, {'attr': {'id': id ~ '-widget-form'}}) }}
            <div class="modal-body">
                {% block modal_body %}
                    {{ form_widget(form) }}
                {% endblock %}
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Закрыть</button>
                <button type="submit" class="btn btn-primary">Сохранить</button>
            </div>
            {{ form_end(form) }}
        </div>
    </div>

    <script>
      (function() {
        document.modals = document.modals ?? [];
        document.modals.push('{{ id }}');

        let form = $('#{{ id }}-widget-form'),
            modal = $('#{{ id }}-widget-modal'),
            widgetTarget = $('#{{ widgetTarget }}'),
            widgetButton = $('#{{ widgetButton }}'),
            previousModal = $('.modal.in');

        form.on('submit', function(e) {
          e.preventDefault();

          $.ajax({
            url: '{{ app.request.uri|raw }}',
            method: 'POST',
            data: form.serialize(),
          }).done(function(data) {
            if (data.id && data.text) {
              widgetTarget.select2('destroy').select2({
                theme: 'bootstrap',
                language: 'ru',
                data: [data],
              }).val(data.id).trigger('change').prop('disabled', null);
            } else {
              setTimeout(() => $('body').append(data), 500);
            }

            modal.modal('hide');
            setTimeout(() => modal.remove(), 2000);
          });
        });

        modal.on('hidden.bs.modal', function() {
          if ('{{ id }}' === document.modals[document.modals.length - 1]) {
            document.modals.pop();
            modal.remove();

            if (previousModal.length > 0) {
              previousModal.modal('show');
            }
          }
        });

        if (previousModal.length > 0) {
          previousModal.modal('hide');
        }
        modal.modal('show');

        createAutoCompleteFields();
        registerWidgetButtons();
      })();
    </script>
</div>
