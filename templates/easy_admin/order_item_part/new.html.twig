{% extends 'easy_admin/default/new.html.twig' %}

{% form_theme form.partId with 'easy_admin/order_item_part/part_form.html.twig' %}

{% use 'easy_admin/order/layout.html.twig' %}

{% block content_title %}Создать новую запчасть{% endblock %}

{% block panel_title %}Запчасть{% endblock %}

{% block div_footer %}{% endblock %}

{% set formStorageToken = app.request.query.get('token', random()) %}

{% block panel_body %}
    {{ form_row(form.order) }}
    {{ form_row(form.parent, {'attr': {'class': 'ays-ignore'}}) }}

    <div class="form-group field-easyadmin_autocomplete">
        {{ form_label(form.partId) }}

        <div class="input-group">
            {{ form_widget(form.partId) }}
            <div class="input-group-btn">
                {% set referer = easyadmin_path('OrderItemPart', 'new', {'order_id': order|toId, 'referer': app.request.query.get('referer'), 'token': formStorageToken}) %}
                <a href="{{ easyadmin_path('Part', 'new', {'referer': referer|url_encode}) }}" class="btn btn-primary js-btn-part-new">
                    Создать
                </a>
            </div>
        </div>

        {{ form_errors(form.partId) }}
    </div>

    {{ form_row(form.price, {'attr': {'class': 'ays-ignore'}}) }}
    {{ form_row(form.quantity, {'attr': {'class': 'ays-ignore'}}) }}
    {{ form_row(form.warranty, {'attr': {'class': 'ays-ignore'}}) }}
    {{ form_row(form.supplier, {'attr': {'class': 'ays-ignore'}}) }}
{% endblock %}

{% block body_javascript %}
    {{ parent() }}

    <script type="text/javascript">
      const storageKey = 'orderItemPart-' + {{ formStorageToken }};

      let parentInput = $('#{{ form.parent.vars.id }}'),
          partInput = $("#{{ form.partId.children.autocomplete.vars.id }}"),
          costInput = $("#{{ form.price.vars.id }}"),
          quantityInput = $('#{{ form.quantity.vars.id }}'),
          warrantyInput = $('#{{ form.warranty.vars.id }}');

      partInput.on('change', function() {
        if (costInput.val()) {
          return;
        }

        let text = $(this).text();
        let price = text.split('|')[1].trim().replace(/\s/g, '').slice(0, -1).trim().replace(' ', '');
        costInput.val(price);
      });

      /* > Save to session */
      $(document).on('ready', function() {
        const json = localStorage.getItem(storageKey);

        if (!json) {
          return;
        }

        const data = JSON.parse(json);

        parentInput.val(data.group);
        costInput.val(data.cost);
        quantityInput.val(data.quantity);
        warrantyInput.prop('checked', data.warranty);

        localStorage.removeItem(storageKey);
      });

      $('.js-btn-part-new').on('click', function(e) {
        localStorage.setItem(storageKey, JSON.stringify({
          group: parentInput.val(),
          cost: costInput.val(),
          quantity: quantityInput.val(),
          warranty: warrantyInput.prop('checked'),
        }));
      });
      /* < Save to session */
    </script>
{% endblock %}
