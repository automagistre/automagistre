---
kind: pipeline
type: docker
name: default

clone:
    depth: 1

steps:
    -   name: build app
        image: docker:18.06.1-ce
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        commands:
            - >-
                docker build -t "automagistre/app:${DRONE_BUILD_NUMBER}"
                --build-arg APP_ENV="test"
                --build-arg APP_DEBUG="1"
                --build-arg APP_VERSION="$DRONE_BUILD_NUMBER"
                --target app
                .

    -   name: php-cs-fixer
        image: automagistre/app:${DRONE_BUILD_NUMBER}
        commands:
            - >-
                php-cs-fixer fix --dry-run --diff-format udiff --using-cache=no
        when:
            branch:
                exclude: master

    -   name: blank end line
        group: validate
        image: automagistre/app:${DRONE_BUILD_NUMBER}
        commands:
            - >-
                find .
                -not -path "./public/*"
                -not -path "./.idea/*"
                -type f -exec grep -Iq . {} \; -and -print0
                | xargs -0 -L1 bash -c 'test -z "$(tail -c 1 "$0")"
                || (echo "No new line at end of $0" && exit 1)'
                || exit 1
        when:
            branch:
                exclude: master

    -   name:  symfony requirements
        image: automagistre/app:${DRONE_BUILD_NUMBER}
        commands:
            - requirements-checker
        when:
            branch:
                exclude: [ master ]

    -   name:  symfony security
        group: validate
        image: automagistre/app:${DRONE_BUILD_NUMBER}
        commands:
            - security-checker security:check $APP_DIR/composer.lock
        when:
            branch:
                exclude: [ master ]

    -   name:  phpstan
        image: automagistre/app:${DRONE_BUILD_NUMBER}
        commands:
            - cd "$APP_DIR"
            - phpstan analyse --configuration phpstan.neon --no-progress

    -   name:  psalm
        group: validate
        image: automagistre/app:${DRONE_BUILD_NUMBER}
        commands:
            - cd "$APP_DIR"
            - psalm --show-info=false --no-progress
        when:
            event: push

    -   name:  doctrine
        group: validate
        image: automagistre/app:${DRONE_BUILD_NUMBER}
        commands:
            - $$WAIT_FOR_IT landlord:3306
            - $$WAIT_FOR_IT tenant_msk:3306
            - console doctrine:migrations:migrate --no-interaction --allow-no-migration --db=landlord --em=landlord
            - console doctrine:migrations:migrate --no-interaction --allow-no-migration --db=tenant --em=tenant --tenant=msk
            - console doctrine:schema:validate --em=landlord
            - console doctrine:schema:validate --em=tenant --tenant=msk
        environment:
            MYSQL_PASSWORD: 'db'

    -   name:  phpunit
        group: test
        image: automagistre/app:${DRONE_BUILD_NUMBER}
        commands:
            - cd "$APP_DIR"
            - paratest --processes=$(grep -c ^processor /proc/cpuinfo || 4)
        environment:
            MYSQL_PASSWORD: 'db'

    -   name: build app prod
        group: deploy
        image: docker:18.06.1-ce
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        commands:
            - >-
                docker build -t "automagistre/app:${DRONE_BUILD_NUMBER}"
                --build-arg APP_ENV="prod"
                --build-arg APP_DEBUG="0"
                --build-arg APP_VERSION="$DRONE_BUILD_NUMBER"
                --target app
                .
            - >-
                docker build -t "automagistre/app-nginx:${DRONE_BUILD_NUMBER}"
                --build-arg APP_ENV="prod"
                --build-arg APP_DEBUG="0"
                --build-arg APP_VERSION="$DRONE_BUILD_NUMBER"
                --target nginx
                .
        when:
            event: push
            branch: master
            status: success

    -   name: deploy
        image: docker/compose:1.23.1
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        commands:
            - cd infrastructure
            - docker-compose --file docker-stack.automagistre.yml config | docker stack deploy --prune --with-registry-auth --compose-file - automagistre
            - docker stack deploy --prune --with-registry-auth --compose-file docker-stack.redirects.yml redirect
        when:
            event: push
            branch: master
            status: success

services:
    -   name: landlord
        image: mariadb:10.3.10
        environment:
            MYSQL_DATABASE: 'landlord'
            MYSQL_USER: 'db'
            MYSQL_PASSWORD: 'db'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
        tmpfs:
            - /var/lib/mysql

    -   name: tenant_msk
        image: mariadb:10.3.10
        environment:
            MYSQL_DATABASE: 'tenant'
            MYSQL_USER: 'db'
            MYSQL_PASSWORD: 'db'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
        tmpfs:
            - /var/lib/mysql

---
kind: signature
hmac: 2369b52328d29034216f0b4a09da459c0f640048cd77351d21fa391d045fc433

...
