---
kind: pipeline
type: docker
name: build

clone:
    depth: 0

volumes:
    -   name: docker.sock
        host:
            path: /var/run/docker.sock

environment:
    DOCKER_CONFIG: /drone/src/.docker

steps:
    - &docker
        name: build php base
        image: automagistre/docker:stable
        volumes:
            -   name: docker.sock
                path: /var/run/docker.sock
        commands:
            - docker build -t "automagistre/tenant-php:base-${DRONE_BUILD_NUMBER}" --progress=plain --target php-base .

    -   <<: *docker
        name: build nginx base
        commands:
            - docker build -t "automagistre/tenant-nginx:base-${DRONE_BUILD_NUMBER}" --progress=plain --target nginx-base .

    -   <<: *docker
        name: build php
        commands:
            - docker build -t "automagistre/tenant-php:${DRONE_BUILD_NUMBER}" --progress=plain --target php .
        depends_on:
            - build php base

    -   <<: *docker
        name: build nginx
        commands:
            - docker build -t "automagistre/tenant-nginx:${DRONE_BUILD_NUMBER}" --progress=plain --target nginx .
        depends_on:
            - build php
            - build nginx base

    -   <<: *docker
        name: docker login
        commands:
            - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        environment:
            DOCKER_USERNAME:
                from_secret: docker_username
            DOCKER_PASSWORD:
                from_secret: docker_password
        when:
            branch: [ master ]
        depends_on:
            - build php base

    -   <<: *docker
        name: push php base
        commands:
            - docker tag automagistre/tenant-php:base-${DRONE_BUILD_NUMBER} automagistre/tenant-php:base
            - docker push automagistre/tenant-php:base
        when:
            branch: [ master ]
        depends_on:
            - docker login
            - build php base

    -   <<: *docker
        name: push nginx base
        commands:
            - docker tag automagistre/tenant-nginx:base-${DRONE_BUILD_NUMBER} automagistre/tenant-nginx:base
            - docker push automagistre/tenant-nginx:base
        when:
            branch: [ master ]
        depends_on:
            - docker login
            - build nginx base

---
kind: pipeline
type: docker
name: test

depends_on:
    - build

clone:
    depth: 0

services:
    -   name: db
        image: postgres:12.2
        environment:
            POSTGRES_DB: db_test
            POSTGRES_USER: db
            POSTGRES_PASSWORD: db
        tmpfs:
            - /var/lib/postgresql/data

volumes:
    -   name: sonarqube
        host:
            path: /opt/sonarqube/scanner/cache
    -   name: composer
        host:
            path: /var/cache/composer

steps:
    -   name: install
        image: automagistre/tenant-php:base-${DRONE_BUILD_NUMBER}
        volumes:
            -   name: composer
                path: /var/cache/composer
        commands:
            - echo APP_ENV=test >> .env
            - echo APP_DEBUG=1 >> .env
            - composer install --no-interaction --no-progress --classmap-authoritative
            - bin/console cache:warmup
            - bin/console assets:install public

    -   name: php-cs-fixer
        image: automagistre/tenant-php:base-${DRONE_BUILD_NUMBER}
        commands:
            - vendor/bin/php-cs-fixer fix --dry-run --diff-format udiff --using-cache=no
        when:
            branch:
                exclude: [ master ]
        depends_on:
            - install

    -   name: composer normalize
        image: automagistre/tenant-php:base-${DRONE_BUILD_NUMBER}
        commands:
            - composer normalize --dry-run
        when:
            branch:
                exclude: [ master ]
        depends_on:
            - install

    -   name: blank end line
        image: automagistre/tenant-php:base-${DRONE_BUILD_NUMBER}
        commands:
            - >-
                find .
                -not -path "./public/*"
                -not -path "./.idea/*"
                -not -path "./var/*"
                -not -path "./vendor/*"
                -not -path "./.git/*"
                -type f -exec grep -Iq . {} \; -and -print0
                | xargs -0 -n 1 sh -c 'test -z "$(tail -c 1 "$0")"
                || (echo "No new line at end of $0" && exit 1)'
                || exit 1
        when:
            branch:
                exclude: [ master ]
        depends_on:
            - install

    -   name: symfony requirements
        image: automagistre/tenant-php:base-${DRONE_BUILD_NUMBER}
        commands:
            - vendor/bin/requirements-checker
        when:
            branch:
                exclude: [ master ]
        depends_on:
            - install

    -   name: symfony security
        image: symfonycorp/cli:v4.21.6
        command:
            - security:check
        when:
            branch:
                exclude: [ master ]

    -   name: symfony linters
        image: automagistre/tenant-php:base-${DRONE_BUILD_NUMBER}
        commands:
            - bin/console lint:yaml config --parse-tags
            - bin/console lint:twig templates
        depends_on:
            - install

    -   name: phpstan
        image: automagistre/tenant-php:base-${DRONE_BUILD_NUMBER}
        commands:
            - vendor/bin/phpstan analyse --configuration phpstan.neon --no-progress --memory-limit=-1
        depends_on:
            - install

    -   name: psalm
        image: automagistre/tenant-php:base-${DRONE_BUILD_NUMBER}
        commands:
            - vendor/bin/psalm --show-info=false --no-progress
        when:
            event: [ push ]
        depends_on:
            - install

    -   name: migration
        image: automagistre/tenant-php:base-${DRONE_BUILD_NUMBER}
        commands:
            - bin/console doctrine:migrations:migrate --no-interaction --allow-no-migration
        depends_on:
            - install

    -   name: fixtures
        image: automagistre/tenant-php:base-${DRONE_BUILD_NUMBER}
        commands:
            - bin/console doctrine:fixtures:load --no-interaction
        depends_on:
            - migration

    -   name: schema
        image: automagistre/tenant-php:base-${DRONE_BUILD_NUMBER}
        commands:
            - bin/console doctrine:schema:validate
        depends_on:
            - migration

    -   name: phpunit
        image: automagistre/tenant-php:base-${DRONE_BUILD_NUMBER}
        commands:
            - vendor/bin/paratest --log-junit=var/junit.xml --coverage-clover=var/clover.xml
        depends_on:
            - fixtures

    -   name: infection
        image: automagistre/tenant-php:base-${DRONE_BUILD_NUMBER}
        commands:
            - vendor/bin/infection --no-progress --threads=$(nproc) --only-covered --min-msi=67 --min-covered-msi=67
        failure: ignore
        depends_on:
            - fixtures

    -   name: logs
        image: automagistre/tenant-php:base-${DRONE_BUILD_NUMBER}
        commands:
            - cat var/log/* || true
        depends_on:
            - phpunit
        when:
            status:
                - failure

    -   name: sonarqube
        image: aosapps/drone-sonar-plugin
        pull: if-not-exists
        environment:
            SONAR_USER_HOME: /opt/sonarqube
        settings:
            sonar_host: https://sonarqube.automagistre.ru
            sonar_token:
                from_secret: SONAR_TOKEN
        volumes:
            -   name: sonarqube
                path: /opt/sonarqube
        when:
            branch: master
        depends_on:
            - phpunit

---
kind: pipeline
type: docker
name: e2e

depends_on:
    - build

clone:
    disable: true

services:
    -   name: nginx
        image: automagistre/tenant-nginx:${DRONE_BUILD_NUMBER}
    -   name: php-fpm
        image: automagistre/tenant-php:${DRONE_BUILD_NUMBER}
        environment:
            APP_SECRET: S3cr3tAtvichau

steps:
    -   name: wait
        image: automagistre/wait-for-it:stable
        commands:
            - /wait-for-it.sh nginx:80
            - /wait-for-it.sh php-fpm:9000

    -   name: curl
        image: curlimages/curl:7.74.0
        pull: if-not-exists
        commands:
            - >-
                curl
                --fail
                --include
                -H 'Host: msk.automagistre.ru'
                nginx/login
        depends_on:
            - wait

---
kind: pipeline
type: docker
name: deploy

trigger:
    branch:
        - master
        - rc

clone:
    depth: 0

depends_on:
    - test
    - e2e

volumes:
    -   name: docker.sock
        host:
            path: /var/run/docker.sock
    -   name: env
        host:
            path: /opt/secrets/automagistre

steps:
    -   name: check deploy
        image: alpine/git:1.0.7
        commands:
            - \[ "${DRONE_COMMIT_SHA}" == "$$(git ls-remote origin ${DRONE_COMMIT_BRANCH} | awk '{ print $1}')" ] || exit 78

    -   name: deploy
        image: automagistre/docker-compose:stable
        volumes:
            -   name: env
                path: /drone/src/.env
            -   name: docker.sock
                path: /var/run/docker.sock
        commands:
            - >-
                cat .tenants | while read tenant; do
                export TENANT=$tenant
                && mkdir -p /opt/am/db/tenant/$tenant
                && docker-compose --file .swarm.yml config | docker stack deploy --prune --with-registry-auth --resolve-image never --compose-file - tenant_$tenant
                ; done
        environment:
            VERSION: ${DRONE_BUILD_NUMBER}
        depends_on:
            - check deploy

    -   name: clean
        image: automagistre/docker-compose:stable
        volumes:
            -   name: env
                path: /drone/src/.env
            -   name: docker.sock
                path: /var/run/docker.sock
        commands:
            - docker rmi `docker images --format "{{.Repository}}:{{.Tag}}" --filter reference=automagistre/tenant-php:* --filter before=automagistre/tenant-php:${DRONE_BUILD_NUMBER}` || true
            - docker rmi `docker images --format "{{.Repository}}:{{.Tag}}" --filter reference=automagistre/tenant-nginx:* --filter before=automagistre/tenant-nginx:${DRONE_BUILD_NUMBER}` || true
        depends_on:
            - deploy

---
kind: pipeline
type: docker
name: delete

trigger:
    branch:
        - rc
        - test
    status:
        - success
        - failure

depends_on:
    - test
    - deploy

clone:
    depth: 0

steps:
    -   name: delete branch
        image: alpine/git:1.0.7
        commands:
            - git remote set-url origin ${DRONE_GIT_SSH_URL}
            - mkdir -p ~/.ssh -m 700
            - ssh-keyscan github.com >> ~/.ssh/known_hosts
            - echo "$GIT_SSH_KEY" > ~/.ssh/id_rsa
            - chmod 600 ~/.ssh/id_rsa
            - git push origin --delete ${DRONE_COMMIT_BRANCH}
        environment:
            GIT_SSH_KEY:
                from_secret: GIT_SSH_KEY

---
kind: pipeline
type: docker
name: clean

trigger:
    branch:
        exclude:
            - master
            - rc
    status:
        - success
        - failure

depends_on:
    - test
    - deploy

clone:
    disable: true

volumes:
    -   name: docker.sock
        host:
            path: /var/run/docker.sock

steps:
    -   name: clean CI images
        image: automagistre/docker:stable
        volumes:
            -   name: docker.sock
                path: /var/run/docker.sock
        commands:
            - docker rmi "automagistre/tenant-nginx:${DRONE_BUILD_NUMBER}"
            - docker rmi "automagistre/tenant-nginx:base-${DRONE_BUILD_NUMBER}"
            - docker rmi "automagistre/tenant-php:${DRONE_BUILD_NUMBER}"
            - docker rmi "automagistre/tenant-php:base-${DRONE_BUILD_NUMBER}"
