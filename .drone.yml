---
kind: pipeline
type: docker
name: build

trigger:
    event:
        exclude:
            - pull_request

clone:
    depth: 0

volumes:
    -   name: docker.sock
        host:
            path: /var/run/docker.sock

environment:
    DOCKER_CONFIG: /drone/src/.docker

steps:
    - &docker
        name: node base
        image: automagistre/docker:stable
        volumes:
            -   name: docker.sock
                path: /var/run/docker.sock
        commands:
            - docker build -t ${DRONE_REPO}:node-base-${DRONE_BUILD_NUMBER} --progress=plain --target node-base .

    -   <<: *docker
        name: nginx base
        commands:
            - docker build -t ${DRONE_REPO}:nginx-base-${DRONE_BUILD_NUMBER} --progress=plain --target nginx-base .

    -   <<: *docker
        name: nginx
        commands:
            - docker build -t ${DRONE_REPO}:${DRONE_BUILD_NUMBER} --progress=plain --target nginx .
        depends_on:
            - node base
            - nginx base

---
kind: pipeline
type: docker
name: push

trigger:
    branch:
        - master
        - next
    event:
        - push

clone:
    depth: 0

depends_on:
    - build

volumes:
    -   name: docker.sock
        host:
            path: /var/run/docker.sock

environment:
    DOCKER_CONFIG: /drone/src/.docker

steps:
    -   name: docker login
        image: automagistre/docker:stable
        volumes:
            -   name: docker.sock
                path: /var/run/docker.sock
        commands:
            - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        environment:
            DOCKER_USERNAME:
                from_secret: docker_username
            DOCKER_PASSWORD:
                from_secret: docker_password

    -   name: node base
        image: automagistre/docker:stable
        volumes:
            -   name: docker.sock
                path: /var/run/docker.sock
        commands:
            - docker tag ${DRONE_REPO}:node-base-${DRONE_BUILD_NUMBER} ${DRONE_REPO}:node-base
            - docker push ${DRONE_REPO}:node-base
            - docker rmi ${DRONE_REPO}:node-base-${DRONE_BUILD_NUMBER}
        depends_on:
            - docker login

    -   name: nginx base
        image: automagistre/docker:stable
        volumes:
            -   name: docker.sock
                path: /var/run/docker.sock
        commands:
            - docker tag ${DRONE_REPO}:nginx-base-${DRONE_BUILD_NUMBER} ${DRONE_REPO}:nginx-base
            - docker push ${DRONE_REPO}:nginx-base
            - docker rmi ${DRONE_REPO}:nginx-base-${DRONE_BUILD_NUMBER}
        depends_on:
            - docker login

---
kind: pipeline
type: docker
name: deploy

trigger:
    branch:
        - master
        - rc
        - ff
        - next
    event:
        - push

clone:
    depth: 0

depends_on:
    - build

volumes:
    -   name: docker.sock
        host:
            path: /var/run/docker.sock
    -   name: env
        host:
            path: /opt/secrets/automagistre

steps:
    -   name: check deploy
        image: automagistre/git:stable
        commands:
            - \[ "${DRONE_COMMIT_SHA}" == "$$(git ls-remote origin ${DRONE_COMMIT_BRANCH} | awk '{ print $1}')" ] || exit 78

    -   name: deploy
        image: automagistre/docker-compose:stable
        volumes:
            -   name: env
                path: /drone/src/.env
            -   name: docker.sock
                path: /var/run/docker.sock
        commands:
            - docker stack rm automagistre-next
            - while docker network inspect automagistre-next --format " " > /dev/null; do sleep 0.1; done
            - docker-compose --file .swarm.yml config | docker stack deploy --prune --with-registry-auth --resolve-image never --compose-file - automagistre-next
        environment:
            IMAGE: ${DRONE_REPO}:${DRONE_BUILD_NUMBER}
        depends_on:
            - check deploy

---
kind: pipeline
type: docker
name: migrate

trigger:
    branch:
        - master
        - rc
        - next

clone:
    depth: 1

depends_on:
    - deploy

steps:
    -   name: wait
        image: curlimages/curl:7.79.1
        pull: if-not-exists
        commands:
            - sleep 40
            - >-
                timeout 30s
                sh -c "until curl --fail --include https://api-next.automagistre.ru/healthz; do sleep 0.5; done"

    -   name: hasura migrate
        image: hasura/graphql-engine:v2.0.9.cli-migrations-v3
        commands:
            - hasura-cli metadata apply
            - hasura-cli migrate apply --version 1634986813924 --skip-execution --database-name default
            - hasura-cli migrate apply --database-name default
            - hasura-cli metadata reload
            - hasura-cli migrate status --database-name default
        environment:
            HASURA_GRAPHQL_ENDPOINT: https://api-next.automagistre.ru
            HASURA_GRAPHQL_ADMIN_SECRET:
                from_secret: crm_hasura_admin_secret
            HASURA_GRAPHQL_DISABLE_INTERACTIVE: 'true'
        depends_on:
            - wait

---
kind: pipeline
type: docker
name: delete

trigger:
    branch:
        - rc
        - test
        - ff
    event:
        - push
    status:
        - success
        - failure

depends_on:
    - deploy

clone:
    depth: 0

steps:
    -   name: delete branch
        image: automagistre/git:stable
        commands:
            - git remote set-url origin ${DRONE_GIT_SSH_URL}
            - mkdir -p ~/.ssh -m 700
            - ssh-keyscan github.com >> ~/.ssh/known_hosts
            - echo "$GIT_SSH_KEY" > ~/.ssh/id_rsa
            - chmod 600 ~/.ssh/id_rsa
            - git push origin --delete ${DRONE_COMMIT_BRANCH}
        environment:
            GIT_SSH_KEY:
                from_secret: GIT_SSH_KEY

---
kind: pipeline
type: docker
name: dependabot

trigger:
    branch:
        - master
    event:
        - pull_request
clone:
    disable: true

steps:
    -   name: check is dependabot
        image: automagistre/git:stable
        pull: if-not-exists
        commands:
            - \[ "dependabot[bot]" == ${DRONE_COMMIT_AUTHOR} ] || exit 78

    -   name: clone
        image: automagistre/git:stable
        pull: if-not-exists
        commands:
            - git clone --depth 2 -b ${DRONE_SOURCE_BRANCH} ${DRONE_REMOTE_URL} .
            - git reset --hard ${DRONE_COMMIT_SHA}
        depends_on:
            - check is dependabot

    -   name: automerge
        image: automagistre/github-cli:stable
        pull: if-not-exists
        commands:
            - gh pr merge ${DRONE_PULL_REQUEST} --auto --rebase
        environment:
            GITHUB_TOKEN:
                from_secret: GITHUB_TOKEN
        depends_on:
            - clone

    -   name: rebase
        image: automagistre/github-cli:stable
        pull: if-not-exists
        commands:
            - |
                if [ "$$(git rev-parse HEAD^1)" != "$$(git ls-remote origin ${DRONE_COMMIT_BRANCH} | awk '{ print $1}')" ]
                then
                    gh pr comment ${DRONE_PULL_REQUEST} --body "@dependabot rebase"
                fi
        environment:
            GITHUB_TOKEN:
                from_secret: GITHUB_TOKEN
        depends_on:
            - clone
