version: '3.7'

services:
    nginx:
        image: automagistre/app-nginx:${DRONE_BUILD_NUMBER}
        networks:
            - automagistre
            - ingress
        deploy:
            mode: replicated
            replicas: 1
            endpoint_mode: dnsrr
            restart_policy:
                condition: on-failure
            update_config:
                parallelism: 1
                delay: 10s
                order: start-first
            labels:
                - "traefik.docker.network=proxy"
                - "traefik.enable=true"
                - "traefik.frontend.rule=Host:api.automagistre.ru,sto.automagistre.ru"
                - "traefik.port=80"
                - "traefik.protocol=http"
                - "traefik.backend.loadbalancer.method=drr"

    app: &app
        image: automagistre/app:${DRONE_BUILD_NUMBER}
        networks:
            automagistre:
                aliases:
                    - php-fpm
        secrets:
            - { source: automagistre_env, target: /usr/local/app/.env }
            - mysql_password
        deploy:
            mode: replicated
            replicas: 1
            endpoint_mode: dnsrr
            restart_policy:
                condition: on-failure
            update_config:
                parallelism: 1
                delay: 10s
                order: start-first

    migration_landlord:
        <<: *app
        command: wait-for-it.sh landlord:3306 -- console doctrine:migrations:migrate --no-interaction --allow-no-migration --em=landlord
        deploy:
            mode: replicated
            replicas: 1
            restart_policy:
                condition: none
            labels:
                - "traefik.enable=false"

    migration_tenant_sandbox:
        <<: *app
        command: wait-for-it.sh tenant_sandbox:3306 -- console doctrine:migrations:migrate --no-interaction --allow-no-migration --em=tenant --tenant=sandbox
        deploy:
            mode: replicated
            replicas: 1
            restart_policy:
                condition: none
            labels:
                - "traefik.enable=false"

    migration_tenant_msk:
        <<: *app
        command: wait-for-it.sh tenant_msk:3306 -- console doctrine:migrations:migrate --no-interaction --allow-no-migration --em=tenant --tenant=msk
        deploy:
            mode: replicated
            replicas: 1
            restart_policy:
                condition: none
            labels:
                - "traefik.enable=false"

    migration_tenant_kazan:
        <<: *app
        command: wait-for-it.sh tenant_kazan:3306 -- console doctrine:migrations:migrate --no-interaction --allow-no-migration --em=tenant --tenant=kazan
        deploy:
            mode: replicated
            replicas: 1
            restart_policy:
                condition: none
            labels:
                - "traefik.enable=false"

    migration_tenant_shavlev:
        <<: *app
        command: wait-for-it.sh tenant_kazan:3306 -- console doctrine:migrations:migrate --no-interaction --allow-no-migration --em=tenant --tenant=shavlev
        deploy:
            mode: replicated
            replicas: 1
            restart_policy:
                condition: none
            labels:
                - "traefik.enable=false"

    landlord: &mysql
        image: mariadb:10.4.10
        volumes:
            -   type: bind
                source: /home/automagistre/landlord
                target: /var/lib/mysql
            -   type: bind
                source: /home/automagistre/backups
                target: /backups
        environment:
            MYSQL_DATABASE: landlord
            MYSQL_USER: db
            MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
            MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
        networks:
            - automagistre
        secrets:
            - mysql_password
            - mysql_root_password
        deploy:
            mode: global
            update_config:
                failure_action: rollback
                parallelism: 1
                delay: 5s
        healthcheck:
            test: echo "SELECT 1" | mysql -u $$MYSQL_USER -p$$(cat $$MYSQL_PASSWORD_FILE) $$MYSQL_DATABASE
            interval: 5s
            timeout: 5s
            retries: 3
            start_period: 10s

    tenant_sandbox:
        <<: *mysql
        environment:
            MYSQL_DATABASE: tenant
            MYSQL_USER: db
            MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
            MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
        volumes:
            -   type: bind
                source: /home/automagistre/tenant_sandbox
                target: /var/lib/mysql
            -   type: bind
                source: /home/automagistre/backups
                target: /backups

    tenant_msk:
        <<: *mysql
        environment:
            MYSQL_DATABASE: tenant
            MYSQL_USER: db
            MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
            MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
        volumes:
            -   type: bind
                source: /home/automagistre/tenant_msk
                target: /var/lib/mysql
            -   type: bind
                source: /home/automagistre/backups
                target: /backups

    tenant_kazan:
        <<: *mysql
        environment:
            MYSQL_DATABASE: tenant
            MYSQL_USER: db
            MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
            MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
        volumes:
            -   type: bind
                source: /home/automagistre/tenant_kazan
                target: /var/lib/mysql
            -   type: bind
                source: /home/automagistre/backups
                target: /backups

    tenant_shavlev:
        <<: *mysql
        environment:
            MYSQL_DATABASE: tenant
            MYSQL_USER: db
            MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
            MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
        volumes:
            -   type: bind
                source: /home/automagistre/tenant_shavlev
                target: /var/lib/mysql
            -   type: bind
                source: /home/automagistre/backups
                target: /backups

    memcached:
        image: memcached:1.5.11-alpine
        networks:
            - automagistre
        healthcheck:
            test: nc -z 127.0.0.1 11211
            interval: 5s
            timeout: 5s
            retries: 3
            start_period: 5s

networks:
    ingress:
        external: true
        name: proxy
    automagistre:
        driver: overlay
        name: automagistre

secrets:
    automagistre_env:
        external: true
        name: automagistre_env_v3
    mysql_password:
        external: true
        name: automagistre_mysql_password
    mysql_root_password:
        external: true
        name: automagistre_mysql_root_password
